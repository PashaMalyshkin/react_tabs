{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabComponent","currentTab","onSelect","selectedTabId","className","classnames","id","href","onClick","title","Tabs","tabs","onTabSelected","selectedTab","find","tab","map","content","App","useState","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAgC,SAAC,GAIvC,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,cAQA,OACE,oBAEE,UAAQ,MACRC,UAAWC,IACT,CAAE,YAAaJ,EAAWK,KAAOH,IAJrC,SAQE,mBACEI,KAAI,WAAMN,EAAWK,IACrB,UAAQ,UACRE,QAlBY,WACZP,EAAWK,KAAOH,GACpBD,EAASD,IAaT,SAKGA,EAAWQ,SAZTR,EAAWK,KCZTI,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAR,EAEI,EAFJA,cACAS,EACI,EADJA,cAEMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIT,KAAOH,MAAkBQ,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKP,UAAU,gBAAf,SACE,6BACGO,EAAKK,KAAI,SAAAD,GAAG,OACX,cAAC,EAAD,CACEd,WAAYc,EACZZ,cAAeA,EACfD,SAAUU,WAMlB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,gBACGS,QADH,IACGA,OADH,EACGA,EAAaI,cCzBTN,EAAc,CACzB,CAAEL,GAAI,QAASG,MAAO,QAASQ,QAAS,eACxC,CAAEX,GAAI,QAASG,MAAO,QAASQ,QAAS,eACxC,CAAEX,GAAI,QAASG,MAAO,QAASQ,QAAS,gBAG7BC,EAAgB,WAC3B,MAAqCC,mBAASR,EAAK,IAAnD,mBAAOE,EAAP,KAAoBD,EAApB,KAEA,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAYJ,SAGlC,cAAC,EAAD,CACEE,KAAMA,EACNR,cAAeU,EAAYP,GAC3BM,cAAeA,QCtBvBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.99acd6bb.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  currentTab: Tab;\n  selectedTabId: string;\n  onSelect: (tab: Tab) => void;\n}\nexport const TabComponent: React.FC<Props> = ({\n  currentTab,\n  onSelect,\n  selectedTabId,\n}) => {\n  const handleTab = () => {\n    if (currentTab.id !== selectedTabId) {\n      onSelect(currentTab);\n    }\n  };\n\n  return (\n    <li\n      key={currentTab.id}\n      data-cy=\"Tab\"\n      className={classnames(\n        { 'is-active': currentTab.id === selectedTabId },\n      )}\n\n    >\n      <a\n        href={`#${currentTab.id}`}\n        data-cy=\"TabLink\"\n        onClick={handleTab}\n      >\n        {currentTab.title}\n      </a>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Tab } from '../../types/Tab';\nimport { TabComponent } from '../Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabComponent\n              currentTab={tab}\n              selectedTabId={selectedTabId}\n              onSelect={onTabSelected}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, onTabSelected] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}